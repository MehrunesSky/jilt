plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'signing'
    id 'maven'
}

group 'cc.jilt' // we need a domain we own for Maven Central, and jilt.org is scalped
version '1.2'

shadowJar {
    relocate 'com.squareup', 'org.jilt.shaded.com.squareup'

    classifier '' // we want the shadow JAR to be the main output JAR
    configurations = [project.configurations.compileClasspath]
}

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives shadowJar, sourcesJar, javadocJar
}

signing {
    useGpgCmd()
    sign configurations.archives
}
// turn off signing unless we're uploading archives to Maven Central,
// as it will fail if a valid PGP key is not set
tasks.withType(Sign).configureEach {
    onlyIf { project.hasProperty('publishToMavenCentral') }
}

// defaults if the value of the username and password for Maven Central is not found -
// they are only needed when running the 'uploadArchives' task to release a new version
def ossrhUsername = findProperty('ossrhUsername') ?: 'username'
def ossrhPassword = findProperty('ossrhPassword') ?: 'password'

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Jilt'
                description 'Java annotation processor for auto-generating Builder (including Type-Safe Builder) classes'
                url 'https://github.com/skinny85/jilt'

                scm {
                    url 'https://github.com/skinny85/jilt.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'Adam Ruka'
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

if (JavaVersion.current() <= JavaVersion.VERSION_11) {
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6
} else {
    // later Java versions don't support Java 6 anymore
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

dependencies {
    compileOnly 'com.squareup:javapoet:1.8.0'

    testCompile 'junit:junit:4.13.2'
    testCompile 'org.assertj:assertj-core:3.6.2'
    testAnnotationProcessor project
    testAnnotationProcessor 'com.squareup:javapoet:1.8.0'
}
